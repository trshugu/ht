- var soto = "asdf"

doctype html
html
  head
    meta(content="text/html" charset="utf-8")
    title tmp
    
    script(src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous")
    //- script(type="text/javascript", src="bower_components/jquery/dist/jquery.min.js")
    script(type="text/javascript", src="bower_components/coffee-script/extras/coffee-script.js")
    //- script(type="text/javascript", src="bower_components/rxjs/dist/rx.all.min.js")
    //- script(type="text/javascript", src="bower_components/rxjs/dist/rx.time.min.js")

    //- script(type="text/javascript", src="./p5.min.js")
    //- script(type="text/javascript", src="./html2canvas.js")
    
    
    script(type="text/javascript", src="tmp.js")
    link(href="tmp.css", rel="stylesheet")
    
    
    style(type="text/css")
    script(type="text/javascript")
    script(type="text/coffeescript")
    
    
  body
    #tmp(onClick="add()") tmp
    
    
    
    
    
    
    
    
    //-
      script.
        doSubmit = -> grecaptcha.execute()
        onSubmit = -> form.submit()
      
      script(src="https://www.google.com/recaptcha/api.js?hl=ja" async defer)
      
      form(method="POST" action="/")
        .g-recaptcha(
           data-sitekey="aaa"
           data-callback="onSubmit"
           data-size="invisible")
       
        .regbtn_area.btn01_off
          a(href="javascript:void(0);" onclick="doSubmit()") 設定
    
    
    
    
    //-
      - var bai = "aa"
      
      .hensu #{bai}
      
      a#ss(attr="#{bai}") namihei
      .a ぼくのちょっか
      h1 へろあｃけびちょっか
      
      #area
        .aaa あああれあ
        h1 へろあｃけびあれあ
        .iii いいいいあれあ
      
      #arearea
        .a ぼくasdfのれれれ
        h1 へろあfｃけびれれれ
        .iii いいdfdいいれれれｒ
      
    
    
    
    
    
    
    //-
      #paper
        .aaa あああ
        .iii いいいい
      
      #dllink
    
    //-
      script(type="riot/tag" template='jade')
        todo
          h3 TODO
          ul
            li
              each= { item, i in items } { item }
          form(onsubmit={ handleSubmit })
            input
          
          script(type='text/coffee').
            this.items = []
            handleSubmit= (e) ->
              input = e.target[0]
              this.items.push(input.value)
              input.value = ''
            
      
      todo
      
      
      script.
        riot.mount('todo')
    
    //-
      app(title="hell")
      
      
      
      script(type="riot/tag" template='jade')
        app
          h3{ opts.title }
      
      
      script.
        riot.mount("*")
    
    //- ウィンドウサイズのリアルタイムな取得2
      p 画面サイズ：
        span#ScrSize
      p ウィンドウサイズ：
        span#WinSize
    
    
    
    
    //-
      #loc
        a(href="#") aa
    
    
    //-
      .loc
        | asdf
      .loc
        - var u = "asdf/f/f<d>e"
        | #{u}
      .loc
        | #{"sdf"[1]}
      .loc
        | this
        - var c = "asdfasdf"
      
    
    //-
      .1jk3jkl
        2kljfjkfelk
      
      3jo3
      
      .aaa
         ああああ
      
       ああああ
      
      textarea(name="aaa")
        | lkasjdf
    
    
    
    //-
      - var a = "asdf,fe,feef"
      
      each i in a.split(',')
        br
        | #{i}
    
    //-
      #aja
    
    //-
      .container
        h1(contenteditable="true") TEXT
        p.text: input(type="text" placeholder="Text" value="TEXT")
        p.size: input(type="number" placeholder="Size" step="10" value="40")
        p.color: input(title="color" type="color" placeholder="Color" value="#ffffff")
        p#combined
    
    
    //-
      .container
        #box
          span Drag Me
    
    //-
      .header
        button#btn.left Try
        .right
          p: svg(height="12" width="12")
            circle(cx="6" cy="6" r="6" fill="#69c2d8")> click
          p: svg(height="12" width="12")
            circle(cx="6" cy="6" r="6" fill="#ed145b") alt+click
      .marbles
        .timeline: .progressbar
        .filter filter()
        .timeline,progressbar
      script(src="//code.jquery.com/jquery-2.1.1.min.js")
      script(src="//cdnjs.cloudflare.com/ajax/libs/gsap/1.11.7/TweenMax.min.js")
    
    
    //-
      button#btn click
    
    
    
    
    
    //-
      script(type="text/javascript", src="bower_components/coffee-script/extras/coffee-script.js")
      script(type="text/javascript", src="bower_components/jquery/dist/jquery.min.js")
      script(type="text/javascript", src="bower_components/vue/dist/vue.min.js")
      
      script(type="text/javascript", src="bower_components/bacon/dist/Bacon.min.js")
      script(type="text/javascript", src="bower_components/rxjs/dist/rx.all.min.js")
      script(type="text/javascript", src="bower_components/three.js/build/three.min.js")
    
    //-
      script(type="text/javascript", src="bower_components/jointjs/dist/joint.all.min.js")
      script(type="text/javascript", src="bower_components/jointjs/dist/joint.shapes.uml.min.js")
    
    //-
      script(type="text/javascript", src="bower_components/flotr2/flotr2.min.js")
    
    //-
      link(href="bower_components/jointjs/dist/joint.all.min.css", rel="stylesheet")
    
    
    //-
      link(rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.2/styles/default.min.css")
      script(src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.2/highlight.min.js")
      script.
        hljs.initHighlightingOnLoad();
    
    
    
    //- タグテンプレート NG 展開されない
      mixin link
        .lin
          a.menu(attributes)
            block
      
      +link.kurazz(href="#") sya-pu
      +link#aide(href="b") a
      +link(href="a") b
    
    
    
    //-
      mixin atori
        .tori(class=attributes.class)
          block
      
      +atori.bold
        .naka nakami
      
      +atori.red
        .naka rednakami
    
    
    //-
      mixin mifunc(val)
        if val == "vvaall"
          .ifif ihubun
          block
        else
          .elel erusu
          block
      
      
      +mifunc("vvaall")
        p buronakami
      
      +mifunc("tigaumono")
        p buronakami
    
    //-
      button#btn cli
    
    //-
      | jade mix-in (blockが必要であった)
      .a aaa
      mixin wrap(bool)
        if bool
          span(style="color:#121")
            block
        else
          span(style="color:#897")
            block
      .b bbb
      p
        +wrap(true): | qqqq
          | mmmm
        | dfkj
      .c ccc
    
    //-
      #slides
        section.visible 1
        section 2
        section 3
        section 4
        section 5
      
      p#control
        button#prev ←prev
        button#next next→
    
    
    //-
      #loadfile
    
    //-
      #paper
    
    //-
      pre
        code.
          console.log "noi"
          -> alert()

      pre
        code.
          console.log("noi");
          function() {alert();}
    
    //- flotr2でkkbdb
      #add(onclick="add()") add
      #add2(onclick="add2()") add2
      #graph
    
    
    //- vue event
      #app
        input(type="text" v-model="t")
        div {{t}}
        div(v-on="click: fun") aaa
    
    //- vue list select
      #app
        input(type="text" v-model="s")
        div(v-repeat="u | filterBy s in name" v-on="click: cu(this)" v-class="done: this == sel")
          | {{name}}
        div(v-show="sel")
          | {{sel.name}}
          br
          | {{sel.com}}
    
    //- vue フィルター
      #app
        div(v-text="t | lowercase")
        div(v-text="t | uppercase")
        div(v-text="c | currency")
        div(v-text="j | json")
        br
        span(v-repeat="l") {{ $index==0 ? "" : ","}}{{$value}}
        br
        span(v-repeat="l | orderBy -1 ") {{ $index==0 ? "" : ","}}{{$value}}
        br
        span(v-repeat="l | orderBy 1 ") {{ $index==0 ? "" : ","}}{{$value}}
        br
        span(v-repeat="l | filterBy 5") {{ $index==0 ? "" : ","}}{{$value}}
    
    
    
    //- vueサンプル2
      .app
        button(v-on="click: submit('hell', $event)") sub
        button(v-on="click: submit('mit')") sub
        div
          input(type="checkbox" v-model="checked")
          | {{checked ? "t" : "f"}}
        div
          input(type="radio" name="picked" value="bon" v-model="picked")
          input(type="radio" name="picked" value="dona" v-model="picked")
          | {{picked}}
        div
          select(v-model="selected")
            option sss
            option ooo
          | {{selected}}
        div
          select(v-model="sele" options="seleList")
          | {{sele}}
    
    
    
    //- vueサンプル
      #app
        input(type="text" v-model="message")
        input(type="text" v-text="m2")
        div(v-show="message != 'none'") {{message}}
        //- div {{m2}}
        div(v-text="m2") [v-cloak]
        // htmlエスケープされる通常の出力 v-textディレクティブと等価
        | {{text}}
        // htmlエスケープされない出力 v-htmlディレクティブと等価
        | {{{unescapedText}}}
        // 一度だけのバインディング
        | {{* onetimeText}}
        | {{* onetimeText}}
        input(type="text" v-model="text")
        input(type="text" v-model="onetimeText")
        style [v-cloak] { display:none }
        div(v-class="done: klass") nanigai
        // コンパイル後のみ正しくsrcをセットするためにはv-attrディレクティブ
        div(v-attr="value : 'd' + num") aaa {{num}}
    
    
    
    //- vueでtodoリスト
      #todo
        p
          input(type="text" value="" placeholder="TODOを入力" v-model="todoInputValue")
          button(v-on="click: addTodo")
            | 追加
        
        ul(v-repeat="todoList" v-with="i")
          li
            span {{$value}}
              | Todo
            |  - 
            button(v-on="click: removeTodo($index)" )
              | 削除
    
    
    //- vue5
      #app
        header-template
        div(v-repeat="user" v-component="item-template")
      
      script#headerTemplate(type="text/template")
        h3(v-on="click:hell") mytodo
    
    
    //- vue4
      #todo
        h1 myto
        div(v-repeat="t: todos | orderBy 'isDone'")
          input(type="checkbox" v-model="t.isDone")
          {{$index}}:{{t.title}}
        input(type="button" v-on="click: addTodo" value="add todo")
        div left {{lefts}} tasks.
    
    
    
    //- vue3
      #simple
        span(v-text="message" v-on="click: magnify" v-attr="style:font")
    
    
    //- vue2
      #demo
        h1 {{title | uppercase}}
        ul
          li(v-repeat="todos" v-on="click: done = !done" class="{{done ? 'done': ''}}") {{content}}
    
    //- vue1
      #demo
        p {{message}}
        input(v-model="message")
    
    
    
    //- coderwall
      link(href="http://coderwall.com/stylesheets/jquery.coderwall.css" media="all" rel="stylesheet" type="text/css")
      script(src="http://coderwall.com/javascripts/jquery.coderwall.js")
      section(class="coderwall" data-coderwall-username="trshugu" data-coderwall-orientation="vertical")
    
    
    //- ractive
      script(type="text/javascript", src="bower_components/ractive/ractive.min.js")
      #result
      
      script#myTemplate(type="text/ractive")
        {{user}}
        {{messages.unread}}
    
    
    //- bacon.js3
      script(type="text/javascript", src="bower_components/bacon/dist/Bacon.min.js")
      input#input(type="text")
      #results(style="position: absolute; z-index:1000;background-color: white; padding: 0.5em")
    
    
    //- bacon.js2
      script(type="text/javascript", src="bower_components/bacon/dist/Bacon.min.js")
      #up up
      #down down
      #counter
    
    //- bacon.js
      #clickable-block {
          width:10em;
          height:10em;
          background: #F1C40F;
          position:absolute;
      }
      #hukuse {
          width:10em;
          height:10em;
          background: #983;
          position:absolute;
      }
      div:hover { cursor: pointer; }
      #clickable-block
      #hukuse
    
    //- mocha
      script(type="text/javascript", src="bower_components/mocha/mocha.js")
      script(type="text/javascript", src="bower_components/chai/chai.js")
      link(href="bower_components/mocha/mocha.css", rel="stylesheet")
    
    //- jasmine
      script(type="text/javascript", src="bower_components/jasmine/dist/jasmine-standalone-2.0.3/lib/jasmine-2.0.3/jasmine.js")
      script(type="text/javascript", src="bower_components/jasmine/dist/jasmine-standalone-2.0.3/lib/jasmine-2.0.3/jasmine-html.js")
      script(type="text/javascript", src="bower_components/jasmine/dist/jasmine-standalone-2.0.3/lib/jasmine-2.0.3/boot.js")
      script(type="text/javascript", src="bower_components/jasmine/dist/jasmine-standalone-2.0.3/lib/jasmine-2.0.3/console.js")
      link(href="bower_components/jasmine/dist/jasmine-standalone-2.0.3/lib/jasmine-2.0.3/jasmine.css", rel="stylesheet")
      link(rel="shortcut icon" type="image/png" href="bower_components/jasmine/dist/jasmine-standalone-2.0.3/lib/jasmine-2.0.3/jasmine_favicon.png")
    
    
    //- qunit
      script(type="text/javascript", src="bower_components/qunit/qunit/qunit.js")
      link(href="bower_components/qunit/qunit/qunit.css", rel="stylesheet")
      h1#qunit-header QUnit Test Suite
      h2#qunit-banner
      #qunit-testrunner-toolbar
      h2#qunit-userAgent
      ol#qunit-tests
      #qunit-fixture test markup, will be hidden
    
    
    
    
    //- raphael
      script(type="text/javascript", src="bower_components/raphael/raphael-min.js")
    
    
    //- visualize
      script(type="text/javascript", src="visualize.jQuery.js")
      link(href="visualize.css", rel="stylesheet")
      link(href="visualize-dark.css", rel="stylesheet")
      table#tab
        caption 2009 Employee Sales by Department
          thead
            tr
              td
              th(scope='col') food
              th(scope='col') auto
              th(scope='col') household
              th(scope='col') furniture
              th(scope='col') kitchen
              th(scope='col') bath
          tbody
            tr
              th(scope='row') Mary
              td 190
              td 160
              td 40
              td 120
              td 30
              td 70
            tr
              th(scope='row') Tom
              td 3
              td 40
              td 30
              td 45
              td 35
              td 49
            tr
              th(scope='row') Brad
              td 10
              td 180
              td 10
              td 85
              td 25
              td 79
            tr
              th(scope='row') Kate
              td 40
              td 80
              td 90
              td 25
              td 15
              td 119

    
    //- morrisjs
      script(type="text/javascript", src="bower_components/raphael/raphael-min.js")
      script(type="text/javascript", src="bower_components/morrisjs/morris.min.js")
      #morri(style="height: 250px;")
    
    //- テーブルデータをグラフに
      script(type="text/javascript", src="chartify.min.js")
      table#pac
        thead
          tr
            th not
            th pac
        tbody
          tr
            td 1.256
            td 5.027
    
    //- アイコン風グラフ
      script(type="text/javascript", src="bower_components/peity/jquery.peity.min.js")
      .pie.cha 1/5
      .pie 226/230
      .pie 0.52/1.561
      .pie 1,4
      .pie 226,134
      .pie 1,3,4,2,2
      
      .line.update 1,4,3,3,4,5,4,4,6,8,3
      .line 1,4,-3,3,-4,5,4,-4,-6,8,3
    
    //- graphene ダメだった
      script(type="text/javascript", src="bower_components/graphene/graphene-standalone.min.js")
    
    //- sigma ダメだった
      script(type="text/java      #container {
          max-width: 400px;
          height: 400px;
          margin: auto;
        }
        
        sigma.parsers.json('data.json', {
          container: 'container',
          settings: {
            defaultNodeColor: '#ec5148'
          }
        });
      script", src="bower_components/sigma/build/sigma.min.js")
      script(type="text/javascript", src="bower_components/sigma/build/plugins/sigma.parsers.json.min.js")
      #container
      
    //- リアルタイムflotr2
      script(type="text/javascript", src="bower_components/flotr2/flotr2.min.js")
      #add(onclick="add()") add
      #graph
    
    //- flotr2
      body {
        margin: 0px;
        padding: 0px;
      }
      #graph {
        width : 600px;
        height: 400px;
        margin: 20px auto;
      }
      .graph-title {
        font-size:16px;
        font-weight:bold;
        text-align:center;
        margin:50px 0 0;
        }
      script(type="text/javascript", src="bower_components/flotr2/flotr2.min.js")
      #graph
    
    //- リアルタイム更新
      script(type="text/javascript", src="bower_components/d3/d3.min.js")
      script(type="text/javascript", src="bower_components/rickshaw/rickshaw.min.js")
      #tmp(onclick="add()") tmp
      #chart


    //- rickshaw
      script(type="text/javascript", src="bower_components/d3/d3.min.js")
      script(type="text/javascript", src="bower_components/rickshaw/rickshaw.min.js")
      #chart
    
    //- handwritten css
      link(href="http://fonts.googleapis.com/css?family=Oleo+Script" rel="stylesheet" type="text/css")
      h2 tmp
    

    //- knockout 解析
      input(type="text" value="" placeholder="入力" data-bind="value: inputValue")
      button(data-bind="click: add")
        | add

      div(data-bind="foreach: list, visible: list().length > 0")
        div
          span(data-bind="text: text")
            | Todo
          button(data-bind="click: $root.remove")
            | delete
    
    //- knockout でTodoリスト
      p
        input(type="text" value="" placeholder="TODOを入力" data-bind="value: todoInputValue")
        button(data-bind="click: addTodo")
          | 追加

      ul(data-bind="foreach: todoList, visible: todoList().length > 0")
        li
          span(data-bind="text: todoText")
            | Todo
          |  - 
          button(data-bind="click: $root.removeTodo")
            | 削除
    
    
    //- knockout タスクリストサンプル
      div(data-bind="foreach: tasks")
        div(class="task")
          div(data-bind="visible: !editing()")
            | 通常表示するビュー。
            input(type="checkbox" data-bind="checked: completed")
            span(data-bind="if: !completed()")
              span(data-bind="text: name")
            del(data-bind="if: completed()")
              span(data-bind="text: name")
            a(href="javascript:void(0);" data-bind="event: { click: toggleEdit }")
              | [edit]
          
          div(data-bind="visible: editing()")
            | 編集時に表示するビュー
            input(type="text" data-bind="value: name")
            input(type="button" data-bind="event: { click: toggleEdit }" value="編集終了")
            input(type="button" data-bind="event: { click: destroy }" value="削除")
      br
      | form の submit イベントと、appViewModel の addTask メソッドをバインドする
      form(data-bind="event: { submit: addTask }")
        | keyup が発生するたびに、appViewModel.newTaskName の値を更新する
        input(type="text" data-bind="value: newTaskName, valueUpdate: 'keyup'")
        br
        | appViewModel.newTaskName が空のときはボタンを無効にする
        input(type="submit" data-bind="enable: newTaskName().length > 0" value="登録")
      
      
    //- knockout data-bindの試し書き
      input(type="text" data-bind="value: message, valueUpdate: 'afterkeydown'")
      p(id="result" data-bind="text: message") ここに入力されたテキストと同じものが入る

    //- knockout wiki曰く
      p First name:
        input(data-bind="value: firstName, valueUpdate: 'afterkeydown'")
      p Last name: 
        input(data-bind="value: lastName, valueUpdate: 'afterkeydown'")
      h2 Hello, 
        span(data-bind="text: fullName") !
  
    
    //- knockout Modelのテスト用
      span(data-bind="text: value")
      input(id="btn" type="button" value="btn" data-bind="click: btn")

      input(id="btn" type="button" value="btn2" onclick="ddd()")
    
    
    //- 
      | // knockout ViewはViewModelを知っているべきでViewModelはViewを知らなくてもよい
      span(data-bind="text: pN1")
      br
      span(data-bind="text: pN2")
      br
      span(data-bind="text: pN3")
    
    
    //-
    
    
    
